// Shared storage service for events
// Uses a unified storage approach to ensure all users see the same events

// –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const GLOBAL_SHARED_KEY = 'younggo_global_events_v1'
const GLOBAL_PARTICIPANTS_KEY = 'younggo_global_participants_v1'
const LAST_UPDATE_KEY = 'younggo_last_update_v1'

export interface SharedStorageResponse {
  record: {
    events: any[]
    lastUpdated: string
  }
  metadata: {
    id: string
    createdAt: string
    version: number
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID —Å–æ–±—ã—Ç–∏—è
function generateEventId(): number {
  return Date.now() + Math.random()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
function getTimestamp(): string {
  return new Date().toISOString()
}

export async function loadSharedEvents(): Promise<any[]> {
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    const stored = localStorage.getItem(GLOBAL_SHARED_KEY)
    if (stored) {
      const events = JSON.parse(stored)
      console.log('üìÖ Loaded global events:', events.length, 'events available to ALL users')
      return events
    }
    
    // –ï—Å–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    const initialEvents = createInitialEvents()
    await saveSharedEvents(initialEvents)
    console.log('üìÖ Created initial global events:', initialEvents.length, 'events')
    return initialEvents
  } catch (error) {
    console.error('‚ùå Error loading shared events:', error)
    return []
  }
}

export async function saveSharedEvents(events: any[]): Promise<void> {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    localStorage.setItem(GLOBAL_SHARED_KEY, JSON.stringify(events))
    localStorage.setItem(LAST_UPDATE_KEY, getTimestamp())
    
    console.log('üíæ Saved events to global storage:', events.length, 'events now available to ALL users')
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏/–æ–∫–Ω–∞ –æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    window.dispatchEvent(new CustomEvent('younggo-events-updated', {
      detail: { events, timestamp: getTimestamp() }
    }))
  } catch (error) {
    console.error('‚ùå Error saving shared events:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
export function loadSharedParticipants(): any[] {
  try {
    const stored = localStorage.getItem(GLOBAL_PARTICIPANTS_KEY)
    if (stored) {
      return JSON.parse(stored)
    }
  } catch (error) {
    console.error('‚ùå Error loading shared participants:', error)
  }
  return []
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
export function saveSharedParticipants(participants: any[]): void {
  try {
    localStorage.setItem(GLOBAL_PARTICIPANTS_KEY, JSON.stringify(participants))
    localStorage.setItem(LAST_UPDATE_KEY, getTimestamp())
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏/–æ–∫–Ω–∞ –æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    window.dispatchEvent(new CustomEvent('younggo-participants-updated', {
      detail: { participants, timestamp: getTimestamp() }
    }))
  } catch (error) {
    console.error('‚ùå Error saving shared participants:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
export function setupEventSync(callback: (events: any[]) => void): () => void {
  let isActive = true
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  const checkForUpdates = async () => {
    if (!isActive) return
    
    try {
      const sharedEvents = await loadSharedEvents()
      const lastUpdate = localStorage.getItem(LAST_UPDATE_KEY)
      
      if (sharedEvents.length > 0) {
        callback(sharedEvents)
      }
    } catch (error) {
      console.error('‚ùå Error syncing events:', error)
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  const interval = setInterval(checkForUpdates, 5000)
  
  // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
  const handleEventsUpdate = (event: CustomEvent) => {
    if (isActive) {
      callback(event.detail.events)
    }
  }
  
  const handleParticipantsUpdate = (event: CustomEvent) => {
    if (isActive) {
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
      checkForUpdates()
    }
  }
  
  window.addEventListener('younggo-events-updated', handleEventsUpdate as EventListener)
  window.addEventListener('younggo-participants-updated', handleParticipantsUpdate as EventListener)
  
  // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
  checkForUpdates()
  
  return () => {
    isActive = false
    clearInterval(interval)
    window.removeEventListener('younggo-events-updated', handleEventsUpdate as EventListener)
    window.removeEventListener('younggo-participants-updated', handleParticipantsUpdate as EventListener)
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
function createInitialEvents(): any[] {
  return [
    {
      id: generateEventId(),
      title: '–£—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–±–µ–∂–∫–∞ –≤ –ø–∞—Ä–∫–µ –ì–æ—Ä—å–∫–æ–≥–æ',
      description: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π —É—Ç—Ä–µ–Ω–Ω–µ–π –ø—Ä–æ–±–µ–∂–∫–µ! –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.',
      startDate: new Date(Date.now() + 1000 * 60 * 60 * 24).toISOString(),
      location: '–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ',
      city: '–ú–æ—Å–∫–≤–∞',
      address: '—É–ª. –ö—Ä—ã–º—Å–∫–∏–π –í–∞–ª, 9',
      maxParticipants: 50,
      currentParticipants: 0,
      price: 0,
      currency: 'RUB',
      isFree: true,
      registrationRequired: true,
      organizer: {
        id: 1,
        type: 'user',
        name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
        avatar: 'https://via.placeholder.com/40'
      },
      participants: [],
      tags: ['–±–µ–≥', '—É—Ç—Ä–æ', '–ø–∞—Ä–∫'],
      images: ['https://via.placeholder.com/300x200'],
      status: 'upcoming',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      eventType: 'training'
    },
    {
      id: generateEventId(),
      title: '–í–µ—á–µ—Ä–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–æ –±–µ–≥—É',
      description: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –±–µ–≥—É–Ω–æ–≤. –î–∏—Å—Ç–∞–Ω—Ü–∏—è 10 –∫–º.',
      startDate: new Date(Date.now() + 1000 * 60 * 60 * 24 * 2).toISOString(),
      location: '–õ—É–∂–Ω–∏–∫–∏',
      city: '–ú–æ—Å–∫–≤–∞',
      address: '–õ—É–∂–Ω–µ—Ü–∫–∞—è –Ω–∞–±., 24',
      maxParticipants: 30,
      currentParticipants: 0,
      price: 0,
      currency: 'RUB',
      isFree: true,
      registrationRequired: true,
      organizer: {
        id: 2,
        type: 'user',
        name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
        avatar: 'https://via.placeholder.com/40'
      },
      participants: [],
      tags: ['–±–µ–≥', '–≤–µ—á–µ—Ä', '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'],
      images: ['https://via.placeholder.com/300x200'],
      status: 'upcoming',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      isTraining: true,
      sportType: '–ë–µ–≥',
      distance: 10,
      pace: '5:30',
      duration: 60,
      difficulty: 'intermediate',
      eventType: 'training'
    }
  ]
}
